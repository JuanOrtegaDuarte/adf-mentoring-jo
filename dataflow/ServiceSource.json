{
	"name": "ServiceSource",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_module8_tOnlinePurchase",
						"type": "DatasetReference"
					},
					"name": "PurchaseSource"
				},
				{
					"dataset": {
						"referenceName": "ds_module8_onlineservices",
						"type": "DatasetReference"
					},
					"name": "ServiceSource"
				},
				{
					"dataset": {
						"referenceName": "ds_module8_DimOnlineService_sink",
						"type": "DatasetReference"
					},
					"name": "DimServiceSource"
				},
				{
					"dataset": {
						"referenceName": "ds_module8_movies_movies",
						"type": "DatasetReference"
					},
					"name": "MovieSource"
				},
				{
					"dataset": {
						"referenceName": "ds_module8_Movie_Sink",
						"type": "DatasetReference"
					},
					"name": "DimMovieSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_module8_FactOnlinePurchase",
						"type": "DatasetReference"
					},
					"name": "FactOnlinePurchase"
				},
				{
					"dataset": {
						"referenceName": "ds_module8_FactOnlinePurchase_MonthlySnapshot",
						"type": "DatasetReference"
					},
					"name": "MonthlySnapshotSink"
				}
			],
			"transformations": [
				{
					"name": "JoinService"
				},
				{
					"name": "JoinDimService"
				},
				{
					"name": "JoinMovies"
				},
				{
					"name": "JoinDimMovie"
				},
				{
					"name": "selectResult"
				},
				{
					"name": "FormatDateKey"
				},
				{
					"name": "AggregateMonthly"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as integer,",
				"          ServiceId as integer,",
				"          MovieId as integer,",
				"          UserId as integer,",
				"          Price as decimal(4,1),",
				"          TransactionId as string,",
				"          TransactionDate as timestamp,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          SrcFileName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> PurchaseSource",
				"source(output(",
				"          ServiceId as integer,",
				"          ServiceCode as string,",
				"          ServiceName as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ServiceSource",
				"source(output(",
				"          ServiceKey as integer,",
				"          ServiceCode as string,",
				"          ServiceName as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimServiceSource",
				"source(output(",
				"          MovieId as integer,",
				"          MovieIdNK as integer,",
				"          Budget as integer,",
				"          HomepagePath as string,",
				"          Title as string,",
				"          OriginalTitle as string,",
				"          ReleaseDate as date,",
				"          Revenue as long,",
				"          Runtime as integer,",
				"          MovieStatusId as integer,",
				"          AvgVote as decimal(3,1),",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          SrcFileName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> MovieSource",
				"source(output(",
				"          MovieKey as integer,",
				"          MovieIdNK as integer,",
				"          Title as string,",
				"          ReleaseDate as date,",
				"          Runtime as integer,",
				"          MovieStatus as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimMovieSource",
				"PurchaseSource, ServiceSource join(PurchaseSource@ServiceId == ServiceSource@ServiceId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinService",
				"JoinService, DimServiceSource join(ServiceSource@ServiceCode == DimServiceSource@ServiceCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinDimService",
				"JoinDimService, MovieSource join(PurchaseSource@MovieId == MovieSource@MovieId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMovies",
				"JoinMovies, DimMovieSource join(MovieSource@MovieIdNK == DimMovieSource@MovieIdNK,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinDimMovie",
				"FormatDateKey select(mapColumn(",
				"          Price,",
				"          TransactionId,",
				"          ServiceKey,",
				"          MovieKey,",
				"          DateKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectResult",
				"JoinDimMovie derive(DateKey = toInteger(toString(TransactionDate, 'yyyyMMdd'))) ~> FormatDateKey",
				"JoinDimService aggregate(groupBy(MonthKey = toInteger(toString(TransactionDate,'yyyyMM')),",
				"          ServiceKey),",
				"     PurchaseAmount = sum(Price),",
				"          PurchaseQuantity = count(TransactionId)) ~> AggregateMonthly",
				"selectResult sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DateKey as integer,",
				"          OnlineServiceKey as integer,",
				"          MovieKey as integer,",
				"          Price as decimal(4,1),",
				"          TransactionId as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          DateKey,",
				"          OnlineServiceKey = ServiceKey,",
				"          MovieKey,",
				"          Price,",
				"          TransactionId",
				"     )) ~> FactOnlinePurchase",
				"AggregateMonthly sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          MonthKey as integer,",
				"          OnlineServiceKey as integer,",
				"          PurchaseAmount as decimal(10,1),",
				"          PurchaseQuantity as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          MonthKey,",
				"          OnlineServiceKey = ServiceKey,",
				"          PurchaseAmount,",
				"          PurchaseQuantity",
				"     )) ~> MonthlySnapshotSink"
			]
		}
	}
}